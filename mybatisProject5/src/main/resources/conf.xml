<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <properties  resource="db.properties"/>
    <!-- 
    <settings>
            <setting name="cacheEnabled" value="false"  />
            <setting name="lazyLoadingEnabled" value="false"  />
    </settings>
     -->
    <!-- 设置单个/多个别名 -->
    <typeAliases>
        <!-- 单个别名 （别名 忽略大小写） -->
        <!-- <typeAlias type="org.legend.Student" alias="student"/> -->
        <!--  批量定义别名  （别名 忽略大小写），以下会自动将该包中的所有类 批量定义别名： 别名就是类名（不带包名，忽略大小写）   -->
        <package name="org.legend.mybatis.entity"/>
    </typeAliases>

    <!-- 通过environments的default值 和  environment的 id 来指定 MyBatis运行时的数据库环境-->
    <environments default="development">
        <!-- 开发环境（自己的计算机） -->
        <environment id="development">
            <!-- 事务提交方式：
                JDBC:利用JDBC方式处理事务（commit  rollback  close）
                MANAGED：将事务交由 其他组件去托管（spring ,jobss）,默认 会关闭连接。
            
            <transactionManager type="MANAGED"/>
                <property name="closeConnection" value="false"/>
             -->
            <transactionManager type="JDBC" />
            <!-- 数据源类型：
                    UNPOOLED:传统的JDBC模式（每次访问数据库，均需要 打开、关闭等数据库操作，但是 打开、关闭数据库是比较消耗性能的）
                    POOLED：使用数据库连接池
                    JNDI：从tomcat中获取一个内置的数据库连接池 （数据库连接池-数据源  ）
             -->
            <dataSource type="POOLED">

                <!-- 配置数据库信息 -->
                <property name="driver" value="${driver}"/>
                <property name="url" value="${url}"/>
                <property name="username" value="${username}"/>
                <property name="password" value="${password}"/>
            </dataSource>
        </environment>

    </environments>

    <mappers>
        <!-- 加载映射文件 -->
        <mapper resource="org/legend/mybatis/mapper/studentMapper.xml"/>
    </mappers>
</configuration>