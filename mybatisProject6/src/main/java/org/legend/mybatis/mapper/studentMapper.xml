<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace:该mapper.xml映射文件的 唯一标识 -->
<mapper namespace="org.legend.mybatis.mapper.StudentMapper">
	<!--	1.简单类型（8个基本+String）	-->
	<select id="queryStudentCount" resultType="int">
		select count(*) from student
	</select>
	<!--	2.输出参数为实体对象类型		-->
	<select id="queryStuByStuno" 	parameterType="int"  resultType="student" >
		select * from student where stuno = ${value}
	</select>
	<!--	3.输出参数为实体对象类型的集合 ：虽然输出类型为集合，但是resultType依然写 集合的元素类型（resyltType="Student"）	-->
	<select id="queryStudentByhomeaddress" parameterType="student" resultType="student">
		select stuNo,stuName from student where homeaddress=#{address.homeAddress}
	</select>
	<!--	4.输出参数类型为HashMap:(返回Map类型)
			4.1 别名("no"、"name")作为Map的key
			4.2
				id: 数据库字段 "stuNo": 类属性名
				stuName: 数据库字段 "stuName": 类属性名
	-->
	<!-- 4.1 一个HashMap 对应一个学生的多个元素（多个属性）  【一个map，一个学生】   -->
	<select id="queryStudentOutByHashMap"  resultType="HashMap" >
		select stuno "no",stuname "name" from student where stuno=1
	</select>

	<!--	4.2 多个学生就多个hashmap,	resultType填写二维数组元素类型	-->
	<select id="queryAllStudentsOutByHashMap"  resultType="HashMap" >
		select stuno "no",stuname "name" from student
	</select>

	<!--	4.3 输入参数:resultMap形式
				临时改一下列名:
							alter table student change column stuno id int(11);
							alter table student change column stuname name int(11);
		-->
	<select id="queryStudentById" 	 parameterType="int"	resultMap="queryStudentByIdMap" >
		select id,name from student where id = #{id}
	</select>
	<resultMap type="student" id="queryStudentByIdMap">
		<!-- 指定类中的属性 和 表中的字段 对应关系 -->
		<id property="stuNo"  column="id" />
		<result property="stuName" column="name" />
	</resultMap>
<!--	4.4 输出参数:resultType+hashmap形式
			数据库字段名找不到对应的属性名，不会报错而是给个默认值(0、null等)
			所以，如果10个字段，但发现 某一个字段结果始终为默认值（0，0.0，null），则可能是 表的字段  和 类的属性名字写错
	-->
	<select id="queryStudentByIdWithHashMap" 	 parameterType="int"	resultType="student" >
		select id "stuNo",name "stuName" from student where id = #{id}
	</select>
</mapper>